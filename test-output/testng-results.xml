<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="29" passed="29" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-25T17:55:36 IST" name="amazon.in" finished-at="2023-11-25T17:57:45 IST" duration-ms="128583">
    <groups>
    </groups>
    <test started-at="2023-11-25T17:55:36 IST" name="Login" finished-at="2023-11-25T17:56:06 IST" duration-ms="29638">
      <class name="com.Test.LoginTest">
        <test-method signature="loginHappyFlow()[pri:1, instance:com.Test.LoginTest@3ab6678b]" started-at="2023-11-25T17:55:36 IST" name="loginHappyFlow" finished-at="2023-11-25T17:56:00 IST" duration-ms="24171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginHappyFlow -->
        <test-method signature="invalidEmail()[pri:2, instance:com.Test.LoginTest@3ab6678b]" started-at="2023-11-25T17:56:01 IST" name="invalidEmail" finished-at="2023-11-25T17:56:02 IST" duration-ms="1926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method signature="nullEmail()[pri:3, instance:com.Test.LoginTest@3ab6678b]" started-at="2023-11-25T17:56:02 IST" name="nullEmail" finished-at="2023-11-25T17:56:03 IST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullEmail -->
        <test-method signature="invalidPassword()[pri:4, instance:com.Test.LoginTest@3ab6678b]" started-at="2023-11-25T17:56:03 IST" name="invalidPassword" finished-at="2023-11-25T17:56:06 IST" duration-ms="2760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method signature="nullPassword()[pri:5, instance:com.Test.LoginTest@3ab6678b]" started-at="2023-11-25T17:56:06 IST" name="nullPassword" finished-at="2023-11-25T17:56:06 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullPassword -->
      </class> <!-- com.Test.LoginTest -->
    </test> <!-- Login -->
    <test started-at="2023-11-25T17:56:06 IST" name="registration" finished-at="2023-11-25T17:56:20 IST" duration-ms="13582">
      <class name="com.Test.RegistrationTest">
        <test-method is-config="true" signature="registerPageNavigation()[pri:0, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:06 IST" name="registerPageNavigation" finished-at="2023-11-25T17:56:10 IST" duration-ms="4006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerPageNavigation -->
        <test-method signature="registerHappyFlow()[pri:1, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:10 IST" name="registerHappyFlow" finished-at="2023-11-25T17:56:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerHappyFlow -->
        <test-method signature="invalidEmail()[pri:2, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:10 IST" name="invalidEmail" finished-at="2023-11-25T17:56:11 IST" duration-ms="1369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method signature="nullPassword()[pri:3, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:11 IST" name="nullPassword" finished-at="2023-11-25T17:56:12 IST" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullPassword -->
        <test-method signature="passwordLengthTest()[pri:4, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:12 IST" name="passwordLengthTest" finished-at="2023-11-25T17:56:13 IST" duration-ms="1034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordLengthTest -->
        <test-method signature="nullMobileNumber()[pri:5, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:13 IST" name="nullMobileNumber" finished-at="2023-11-25T17:56:14 IST" duration-ms="707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullMobileNumber -->
        <test-method signature="invalidMobileNumber()[pri:6, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:14 IST" name="invalidMobileNumber" finished-at="2023-11-25T17:56:15 IST" duration-ms="878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidMobileNumber -->
        <test-method signature="nullCustomerName()[pri:7, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:15 IST" name="nullCustomerName" finished-at="2023-11-25T17:56:16 IST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nullCustomerName -->
        <test-method signature="existingEmail()[pri:8, instance:com.Test.RegistrationTest@2f61d591]" started-at="2023-11-25T17:56:16 IST" name="existingEmail" finished-at="2023-11-25T17:56:20 IST" duration-ms="3921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- existingEmail -->
      </class> <!-- com.Test.RegistrationTest -->
    </test> <!-- registration -->
    <test started-at="2023-11-25T17:56:20 IST" name="buy items" finished-at="2023-11-25T17:57:44 IST" duration-ms="84392">
      <class name="com.Test.BuyItems">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:56:20 IST" name="setUp" finished-at="2023-11-25T17:56:29 IST" duration-ms="9067" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="searchItem()[pri:1, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:56:29 IST" name="searchItem" finished-at="2023-11-25T17:56:34 IST" duration-ms="5383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItem -->
        <test-method signature="openProductPage()[pri:2, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:56:34 IST" name="openProductPage" finished-at="2023-11-25T17:56:35 IST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openProductPage -->
        <test-method signature="checkProductAvailability()[pri:3, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:56:35 IST" name="checkProductAvailability" finished-at="2023-11-25T17:56:44 IST" duration-ms="8725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkProductAvailability -->
        <test-method signature="addToCart()[pri:4, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:56:44 IST" name="addToCart" finished-at="2023-11-25T17:56:57 IST" depends-on-methods="com.Test.BuyItems.checkProductAvailability" duration-ms="13010" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addToCart -->
        <test-method signature="checkOut()[pri:5, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:56:57 IST" name="checkOut" finished-at="2023-11-25T17:57:01 IST" depends-on-methods="com.Test.BuyItems.addToCart" duration-ms="4177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOut -->
        <test-method signature="addShippingAddress()[pri:6, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:57:01 IST" name="addShippingAddress" finished-at="2023-11-25T17:57:13 IST" depends-on-methods="com.Test.BuyItems.checkOut" duration-ms="11645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addShippingAddress -->
        <test-method signature="addPaymentMethod()[pri:7, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:57:13 IST" name="addPaymentMethod" finished-at="2023-11-25T17:57:32 IST" depends-on-methods="com.Test.BuyItems.addShippingAddress" duration-ms="19769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addPaymentMethod -->
        <test-method signature="placeOrder()[pri:8, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:57:32 IST" name="placeOrder" finished-at="2023-11-25T17:57:36 IST" depends-on-methods="com.Test.BuyItems.addPaymentMethod" duration-ms="3355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- placeOrder -->
        <test-method signature="viewOrder()[pri:9, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:57:36 IST" name="viewOrder" finished-at="2023-11-25T17:57:40 IST" duration-ms="3946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewOrder -->
        <test-method signature="dowloadOrderInvoice()[pri:10, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:57:40 IST" name="dowloadOrderInvoice" finished-at="2023-11-25T17:57:43 IST" depends-on-methods="com.Test.BuyItems.viewOrder" duration-ms="3162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dowloadOrderInvoice -->
        <test-method is-config="true" signature="close()[pri:0, instance:com.Test.BuyItems@18acfe88]" started-at="2023-11-25T17:57:43 IST" name="close" finished-at="2023-11-25T17:57:44 IST" duration-ms="1141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- com.Test.BuyItems -->
    </test> <!-- buy items -->
    <test started-at="2023-11-25T17:57:44 IST" name="Mysql - Database Testing" finished-at="2023-11-25T17:57:45 IST" duration-ms="838">
      <class name="com.Mysql.dbTesting">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:44 IST" name="setUp" finished-at="2023-11-25T17:57:45 IST" duration-ms="601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createTable()[pri:1, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:45 IST" name="createTable" finished-at="2023-11-25T17:57:45 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTable -->
        <test-method signature="insertTable()[pri:2, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:45 IST" name="insertTable" finished-at="2023-11-25T17:57:45 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- insertTable -->
        <test-method signature="findMaxPrice()[pri:3, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:45 IST" name="findMaxPrice" finished-at="2023-11-25T17:57:45 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMaxPrice -->
        <test-method signature="findDuplicateRecord()[pri:4, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:45 IST" name="findDuplicateRecord" finished-at="2023-11-25T17:57:45 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findDuplicateRecord -->
        <test-method signature="findMostSoldProduct()[pri:5, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:45 IST" name="findMostSoldProduct" finished-at="2023-11-25T17:57:45 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMostSoldProduct -->
        <test-method signature="findMostSoldProductByRegion()[pri:6, instance:com.Mysql.dbTesting@5a2bd7c8]" started-at="2023-11-25T17:57:45 IST" name="findMostSoldProductByRegion" finished-at="2023-11-25T17:57:45 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findMostSoldProductByRegion -->
      </class> <!-- com.Mysql.dbTesting -->
    </test> <!-- Mysql - Database Testing -->
  </suite> <!-- amazon.in -->
</testng-results>
